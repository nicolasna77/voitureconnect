generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["base", "dataCarFR", "dataCarEN"]
}

// ============= SCHÉMA BASE =============
model User {
  id                 String        @id @default(uuid())
  name               String
  email              String        @unique
  password           String
  role               Role          @default(USER)
  garages            Garage[]      @relation("GarageOwner")
  offers             Offer[]
  buyerTransactions  Transaction[] @relation("Buyer")
  sellerTransactions Transaction[] @relation("Seller")
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  Account            Account[]
  Session            Session[]
  Ad                 Ad[]
  likes              Like[]
  Car                Car[]

  @@schema("base")
}

enum Role {
  ADMIN
  USER
  PRO

  @@schema("base")
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  @@schema("base")
}

model Account {
  id                String    @id @default(uuid())
  userId            String
  providerType      String
  providerId        String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expires           DateTime?
  user              User      @relation(fields: [userId], references: [id])

  @@schema("base")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("base")
}

model Address {
  id      String   @id @default(uuid())
  street  String
  city    String
  state   String
  zip     String
  country String
  Garage  Garage[]

  @@schema("base")
}

model Garage {
  id        String   @id @default(uuid())
  name      String
  AdresseId String
  Adresse   Address  @relation(fields: [AdresseId], references: [id])
  phone     String
  ownerId   String
  owner     User     @relation("GarageOwner", fields: [ownerId], references: [id])
  adID      Ad[]
  cars      Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("base")
}

model Ad {
  id          String   @id @default(uuid())
  carId       String   @unique
  car         Car      @relation(fields: [carId], references: [id])
  garageId    String?
  title       String
  description String
  garage      Garage?  @relation(fields: [garageId], references: [id])
  offers      Offer[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
  likes       Like[]
  Option      Option[]

  @@schema("base")
}

model Option {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ad        Ad?      @relation(fields: [adId], references: [id])
  adId      String?
  Car       Car?     @relation(fields: [carId], references: [id])
  carId     String?

  @@schema("base")
}

model Offer {
  id          String       @id @default(uuid())
  adId        String
  userId      String
  offerAmount Decimal
  status      String
  ad          Ad           @relation(fields: [adId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Transaction Transaction?

  @@schema("base")
}

model Transaction {
  id        String   @id @default(uuid())
  offerId   String   @unique
  buyerId   String
  sellerId  String
  amount    Decimal
  status    String
  offer     Offer    @relation(fields: [offerId], references: [id])
  buyer     User     @relation("Buyer", fields: [buyerId], references: [id])
  seller    User     @relation("Seller", fields: [sellerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("base")
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  adId      String
  user      User     @relation(fields: [userId], references: [id])
  ad        Ad       @relation(fields: [adId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, adId])
  @@schema("base")
}

model Car {
  id        String   @id @default(uuid())
  userId    String
  Kms       Int
  price     Decimal
  year      Int
  color     String
  fuelType  String
  vin       String   @unique
  optionsID String[]
  Option    Option[]
  gearbox   String
  user      User     @relation(fields: [userId], references: [id])
  garage    Garage?  @relation(fields: [garageId], references: [id])
  garageId  String?
  Ad        Ad?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations avec les données de référence
  carType       CarTypeFR       @relation(fields: [carTypeId], references: [id_car_type])
  carMake       CarMakeFR       @relation(fields: [carMakeId], references: [id_car_make])
  carModel      CarModelFR      @relation(fields: [carModelId], references: [id_car_model])
  carGeneration CarGenerationFR @relation(fields: [carGenerationId], references: [id_car_generation])
  carSerie      CarSerieFR      @relation(fields: [carSerieId], references: [id_car_serie])
  carTrim       CarTrimFR       @relation(fields: [carTrimId], references: [id_car_trim])
  carEquipment  CarEquipmentFR  @relation(fields: [carEquipmentId], references: [id_car_equipment])

  // IDs des données de référence
  carTypeId       Int
  carMakeId       Int
  carModelId      Int
  carGenerationId Int
  carSerieId      Int
  carTrimId       Int
  carEquipmentId  Int

  @@schema("base")
}

// ============= SCHÉMA FRANÇAIS =============
model CarTypeFR {
  id_car_type Int          @id @default(autoincrement())
  name        String
  date_create Int
  date_update String?      @default("NULL")
  cars        Car[]
  carMakes    CarMakeFR[]
  CarModelFR  CarModelFR[]

  @@map("car_type")
  @@schema("dataCarFR")
}

model CarMakeFR {
  id_car_make Int          @id @default(autoincrement())
  id_car_type Int
  name        String
  date_create Int
  date_update String?      @default("NULL")
  Car         Car[]
  carType     CarTypeFR    @relation(fields: [id_car_type], references: [id_car_type], onDelete: Cascade)
  carModels   CarModelFR[]

  @@map("car_make")
  @@schema("dataCarFR")
}

model CarModelFR {
  id_car_model Int               @id @default(autoincrement())
  id_car_make  Int
  name         String
  date_create  Int
  date_update  String?           @default("NULL")
  id_car_type  Int
  Car          Car[]
  carMake      CarMakeFR         @relation(fields: [id_car_make], references: [id_car_make])
  generations  CarGenerationFR[]
  series       CarSerieFR[]
  trims        CarTrimFR[]
  carType      CarTypeFR         @relation(fields: [id_car_type], references: [id_car_type])

  @@map("car_model")
  @@schema("dataCarFR")
}

model CarGenerationFR {
  id_car_generation Int          @id @default(autoincrement())
  id_car_model      Int
  id_car_type       Int
  name              String
  year_begin        String?      @default("NULL")
  year_end          String?      @default("NULL")
  date_update       String?      @default("NULL")
  date_create       Int
  Car               Car[]
  carModel          CarModelFR   @relation(fields: [id_car_model], references: [id_car_model])
  series            CarSerieFR[]

  @@map("car_generation")
  @@schema("dataCarFR")
}

model CarSerieFR {
  id_car_serie      Int              @id @default(autoincrement())
  id_car_model      Int
  id_car_generation Int?
  id_car_type       Int
  name              String
  date_create       Int
  date_update       String?          @default("NULL")
  Car               Car[]
  carModel          CarModelFR       @relation(fields: [id_car_model], references: [id_car_model])
  generation        CarGenerationFR? @relation(fields: [id_car_generation], references: [id_car_generation])
  trims             CarTrimFR[]

  @@map("car_serie")
  @@schema("dataCarFR")
}

model CarTrimFR {
  id_car_trim           Int                       @id @default(autoincrement())
  id_car_serie          Int?
  id_car_model          Int
  id_car_type           Int
  name                  String
  start_production_year String?                   @default("NULL")
  end_production_year   String?                   @default("NULL")
  date_create           Int
  date_update           String?                   @default("NULL")
  Car                   Car[]
  carModel              CarModelFR                @relation(fields: [id_car_model], references: [id_car_model])
  serie                 CarSerieFR?               @relation(fields: [id_car_serie], references: [id_car_serie])
  equipments            CarEquipmentFR[]
  specifications        CarSpecificationValueFR[]

  @@map("car_trim")
  @@schema("dataCarFR")
}

model CarEquipmentFR {
  id_car_equipment Int                @id @default(autoincrement())
  id_car_trim      Int
  name             String
  year             Int? // Changé de String? à Int?
  date_create      Int
  date_update      String?            @default("NULL")
  id_car_type      Int
  Car              Car[]
  trim             CarTrimFR          @relation(fields: [id_car_trim], references: [id_car_trim])
  optionValues     CarOptionValueFR[]

  @@map("car_equipment")
  @@schema("dataCarFR")
}

model CarSpecificationFR {
  id_car_specification Int                       @id @default(autoincrement())
  name                 String
  id_parent            String?                   @default("NULL")
  date_create          Int
  date_update          String?                   @default("NULL")
  id_car_type          Int
  specificationValues  CarSpecificationValueFR[]

  @@map("car_specification")
  @@schema("dataCarFR")
}

model CarSpecificationValueFR {
  id_car_specification_value Int                @id @default(autoincrement())
  id_car_specification       Int
  id_car_trim                Int
  value                      String
  unit                       String?            @default("NULL")
  date_create                Int
  date_update                String?            @default("NULL")
  id_car_type                Int
  specification              CarSpecificationFR @relation(fields: [id_car_specification], references: [id_car_specification])
  trim                       CarTrimFR          @relation(fields: [id_car_trim], references: [id_car_trim])

  @@map("car_specification_value")
  @@schema("dataCarFR")
}

model CarOptionFR {
  id_car_option Int                @id @default(autoincrement())
  name          String
  id_parent     String?            @default("NULL")
  date_create   Int
  date_update   String?            @default("NULL")
  id_car_type   Int
  optionValues  CarOptionValueFR[]

  @@map("car_option")
  @@schema("dataCarFR")
}

model CarOptionValueFR {
  id_car_option_value Int            @id @default(autoincrement())
  id_car_option       Int
  id_car_equipment    Int
  is_base             String?        @default("NULL")
  date_create         Int
  date_update         String?        @default("NULL")
  id_car_type         Int
  option              CarOptionFR    @relation(fields: [id_car_option], references: [id_car_option])
  equipment           CarEquipmentFR @relation(fields: [id_car_equipment], references: [id_car_equipment])

  @@map("car_option_value")
  @@schema("dataCarFR")
}

// ============= SCHÉMA ANGLAIS =============
// Mêmes modèles que le français avec suffixe EN
model CarTypeEN {
  id_car_type Int          @id @default(autoincrement())
  name        String
  date_create Int // Ajout du champ obligatoire
  date_update String?      @default("NULL")
  carModels   CarModelEN[]
  carMakes    CarMakeEN[] // Ajout de la relation avec CarMakeEN

  @@map("car_type")
  @@schema("dataCarEN")
}

model CarMakeEN {
  id_car_make Int          @id @default(autoincrement())
  name        String
  date_create Int
  date_update String?      @default("NULL")
  id_car_type Int
  carType     CarTypeEN    @relation(fields: [id_car_type], references: [id_car_type])
  carModels   CarModelEN[]

  @@map("car_make")
  @@schema("dataCarEN")
}

model CarModelEN {
  id_car_model Int               @id @default(autoincrement())
  name         String
  date_create  Int
  date_update  String?           @default("NULL")
  id_car_make  Int
  id_car_type  Int
  carMake      CarMakeEN         @relation(fields: [id_car_make], references: [id_car_make])
  carType      CarTypeEN         @relation(fields: [id_car_type], references: [id_car_type])
  generations  CarGenerationEN[]
  series       CarSerieEN[]
  trims        CarTrimEN[]

  @@map("car_model")
  @@schema("dataCarEN")
}

model CarGenerationEN {
  id_car_generation Int          @id @default(autoincrement())
  id_car_model      Int
  id_car_type       Int
  name              String
  year_begin        String?      @default("NULL")
  year_end          String?      @default("NULL")
  date_update       String?      @default("NULL")
  date_create       Int
  carModel          CarModelEN?  @relation(fields: [id_car_model], references: [id_car_model], onDelete: NoAction, onUpdate: NoAction)
  series            CarSerieEN[]

  @@map("car_generation")
  @@schema("dataCarEN")
}

model CarSerieEN {
  id_car_serie      Int              @id @default(autoincrement())
  id_car_model      Int
  id_car_generation Int?
  id_car_type       Int
  name              String
  date_create       Int
  date_update       String?          @default("NULL")
  carModel          CarModelEN       @relation(fields: [id_car_model], references: [id_car_model])
  generation        CarGenerationEN? @relation(fields: [id_car_generation], references: [id_car_generation])
  trims             CarTrimEN[]

  @@map("car_serie")
  @@schema("dataCarEN")
}

model CarTrimEN {
  id_car_trim           Int                       @id @default(autoincrement())
  id_car_serie          Int?
  id_car_model          Int
  id_car_type           Int
  name                  String
  start_production_year String?                   @default("NULL")
  end_production_year   String?                   @default("NULL")
  date_create           Int
  date_update           String?                   @default("NULL")
  carModel              CarModelEN                @relation(fields: [id_car_model], references: [id_car_model])
  serie                 CarSerieEN?               @relation(fields: [id_car_serie], references: [id_car_serie])
  equipments            CarEquipmentEN[]
  specifications        CarSpecificationValueEN[]
  carTrimENId_car_trim  Int?

  @@map("car_trim")
  @@schema("dataCarEN")
}

model CarEquipmentEN {
  id_car_equipment Int                @id @default(autoincrement())
  id_car_trim      Int
  name             String
  year             Int? // Changé de String? à Int?
  date_create      Int
  date_update      String?            @default("NULL")
  id_car_type      Int
  trim             CarTrimEN          @relation(fields: [id_car_trim], references: [id_car_trim])
  optionValues     CarOptionValueEN[]

  @@map("car_equipment")
  @@schema("dataCarEN")
}

model CarSpecificationEN {
  id_car_specification Int                       @id @default(autoincrement())
  name                 String
  id_parent            String?                   @default("NULL")
  date_create          Int
  date_update          String?                   @default("NULL")
  id_car_type          Int
  specificationValues  CarSpecificationValueEN[]

  @@map("car_specification")
  @@schema("dataCarEN")
}

model CarSpecificationValueEN {
  id_car_specification_value Int                @id @default(autoincrement())
  id_car_specification       Int
  id_car_trim                Int
  value                      String
  unit                       String?            @default("NULL")
  date_create                Int
  date_update                String?            @default("NULL")
  id_car_type                Int
  specification              CarSpecificationEN @relation(fields: [id_car_specification], references: [id_car_specification])
  trim                       CarTrimEN          @relation(fields: [id_car_trim], references: [id_car_trim])

  @@map("car_specification_value")
  @@schema("dataCarEN")
}

model CarOptionEN {
  id_car_option Int                @id @default(autoincrement())
  name          String
  id_parent     String?            @default("NULL")
  date_create   Int
  date_update   String?            @default("NULL")
  id_car_type   Int
  optionValues  CarOptionValueEN[]

  @@map("car_option")
  @@schema("dataCarEN")
}

model CarOptionValueEN {
  id_car_option_value Int            @id @default(autoincrement())
  id_car_option       Int
  id_car_equipment    Int
  is_base             String?        @default("NULL")
  date_create         Int
  date_update         String?        @default("NULL")
  id_car_type         Int
  option              CarOptionEN    @relation(fields: [id_car_option], references: [id_car_option])
  equipment           CarEquipmentEN @relation(fields: [id_car_equipment], references: [id_car_equipment])

  @@map("car_option_value")
  @@schema("dataCarEN")
}
